{"ast":null,"code":"import { API } from '../config';\nconst link = \"http://localhost:8000/api/\";\nexport const getVehicles = () => {\n  return fetch(`${link}/vehicles/findall`, {\n    method: \"GET\"\n  }).then(response => {\n    console.log(response.data);\n    return response.json();\n  }).catch(err => console.log(err));\n};\n/*const getVehicles = (e) => {\r\n    //Here we will sign up the user then log them in\r\n    //e.preventDefault();\r\n    axios.get('http://localhost:8000/api/vehicles/findall') \r\n    .then(response => {\r\n        //return response.data();\r\n        console.log(response.data);\r\n        return response.data;\r\n    })\r\n    .catch( err => console.log(\"Axios vehicle request failed\", err));\r\n};\r\n*/\n\nexport const read = productId => {\n  return fetch(`${APIT}/vehicle/${productId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const createOrder = (customerId, token, createOrderData) => {\n  return fetch(`http://localhost:8000/api/order/create/${customerId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      order: createOrderData\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const isAuthenticated = () => {\n  if (typeof window == 'undefined') {\n    return false;\n  }\n\n  if (localStorage.getItem('UserAuth')) {\n    return JSON.parse(localStorage.getItem('UserAuth'));\n  } else {\n    return false;\n  }\n};\nexport const authenticate = (data, next) => {\n  if (typeof window !== 'undefined') {\n    localStorage.setItem('UserAuth', JSON.stringify(data));\n    next();\n  }\n};\nexport const getBraintreeClientToken = (customerId, token) => {\n  return fetch(`http://localhost:8000/api/braintree/getToken/${customerId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const processPayment = (customerId, token, paymentData) => {\n  return fetch(`http://localhost:8000/api/braintree/payment/${customerId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(paymentData)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/aman/Desktop/412Project/MorissetteApp/frontend/src/Components/fetchvehicles.js"],"names":["API","link","getVehicles","fetch","method","then","response","console","log","data","json","catch","err","read","productId","APIT","createOrder","customerId","token","createOrderData","headers","Accept","Authorization","body","JSON","stringify","order","isAuthenticated","window","localStorage","getItem","parse","authenticate","next","setItem","getBraintreeClientToken","processPayment","paymentData"],"mappings":"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","sourcesContent":["import {API} from '../config';\r\nconst link = \"http://localhost:8000/api/\"\r\n\r\nexport const getVehicles = () => {\r\n    return fetch(`${link}/vehicles/findall`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n\r\n            console.log(response.data);\r\n            return response.json();\r\n            \r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n\r\n/*const getVehicles = (e) => {\r\n    //Here we will sign up the user then log them in\r\n    //e.preventDefault();\r\n    axios.get('http://localhost:8000/api/vehicles/findall') \r\n    .then(response => {\r\n        //return response.data();\r\n        console.log(response.data);\r\n        return response.data;\r\n    })\r\n    .catch( err => console.log(\"Axios vehicle request failed\", err));\r\n};\r\n*/\r\n\r\nexport const read = productId => {\r\n    return fetch(`${APIT}/vehicle/${productId}`, {\r\n        method: \"GET\"\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n\r\nexport const createOrder = (customerId, token, createOrderData) => {\r\n    return fetch(`http://localhost:8000/api/order/create/${customerId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ order: createOrderData })\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n\r\nexport const isAuthenticated = () => {\r\n    if (typeof window == 'undefined') {\r\n        return false;\r\n    }\r\n    if (localStorage.getItem('UserAuth')) {\r\n        return JSON.parse(localStorage.getItem('UserAuth'));\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const authenticate = (data, next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.setItem('UserAuth', JSON.stringify(data));\r\n        next();\r\n    }\r\n};\r\nexport const getBraintreeClientToken = (customerId, token) => {\r\n    return fetch(`http://localhost:8000/api/braintree/getToken/${customerId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        } \r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\nexport const processPayment = (customerId, token, paymentData) => {\r\n    return fetch(`http://localhost:8000/api/braintree/payment/${customerId}`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(paymentData)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};"]},"metadata":{},"sourceType":"module"}