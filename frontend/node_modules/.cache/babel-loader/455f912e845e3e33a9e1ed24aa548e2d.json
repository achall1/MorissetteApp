{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aman\\\\Desktop\\\\412Project\\\\MorissetteApp\\\\frontend\\\\src\\\\Components\\\\Checkout.js\";\nimport { emptyCart } from './cartHelpers';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { createOrder, processPayment, getBraintreeClientToken, authenticate, isAuthenticated } from './fetchvehicles';\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({\n  products,\n  setRun = f => f,\n  run = undefined\n}) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: '',\n    instance: {},\n    address: ''\n  });\n\n  const customerId = isAuthenticated() && isAuthenticated().customer._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (customerId, token) => {\n    getBraintreeClientToken(userId, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n        setData({ ...data,\n          error: data.error\n        });\n      } else {\n        console.log(data);\n        setData({\n          clientToken: data.clientToken\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const handleAddress = event => {\n    setData({ ...data,\n      address: event.target.value\n    });\n  };\n\n  const getTotal = () => {\n    return products.reduce((currentValue, nextValue) => {\n      return currentValue + nextValue.count * nextValue.price;\n    }, 0);\n  };\n\n  const showCheckout = () => {\n    return isAuthenticated() ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, showDropIn()) : /*#__PURE__*/React.createElement(Link, {\n      to: \"/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Sign in to checkout\"));\n  };\n\n  let deliveryAddress = data.address;\n\n  const buy = () => {\n    setData({\n      loading: true\n    }); // send the nonce to your server\n    // nonce = data.instance.requestPaymentMethod()\n\n    let nonce;\n    let getNonce = data.instance.requestPaymentMethod().then(data => {\n      // console.log(data);\n      nonce = data.nonce; // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n      // and also total to be charged\n      // console.log(\n      //     \"send nonce and total to process: \",\n      //     nonce,\n      //     getTotal(products)\n      // );\n\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getTotal(products)\n      };\n      processPayment(userId, token, paymentData).then(response => {\n        console.log(response); // empty cart\n        // create order\n\n        const createOrderData = {\n          products: products,\n          transaction_id: response.transaction.id,\n          amount: response.transaction.amount,\n          address: deliveryAddress\n        };\n        createOrder(userId, token, createOrderData).then(response => {\n          emptyCart(() => {\n            setRun(!run); // run useEffect in parent Cart\n\n            console.log('payment success and empty cart');\n            setData({\n              loading: false,\n              success: true\n            });\n          });\n        }).catch(error => {\n          console.log(error);\n          setData({\n            loading: false\n          });\n        });\n      }).catch(error => {\n        console.log(error);\n        setData({\n          loading: false\n        });\n      });\n    }).catch(error => {\n      // console.log(\"dropin error: \", error);\n      setData({ ...data,\n        error: error.message\n      });\n    });\n  };\n\n  const showDropIn = () => /*#__PURE__*/React.createElement(\"div\", {\n    onBlur: () => setData({ ...data,\n      error: ''\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, data.clientToken !== null && products.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gorm-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, \"Delivery address:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: handleAddress,\n    className: \"form-control\",\n    value: data.address,\n    placeholder: \"Type your delivery address here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(DropIn, {\n    options: {\n      authorization: data.clientToken,\n      paypal: {\n        flow: 'vault'\n      }\n    },\n    onInstance: instance => data.instance = instance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: buy,\n    className: \"btn btn-success btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"Pay\")) : null);\n\n  const showError = error => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, error);\n\n  const showSuccess = success => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    style: {\n      display: success ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, \"Thanks! Your payment was successful!\");\n\n  const showLoading = loading => loading && /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 47\n    }\n  }, \"Loading...\");\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"Total: $\", getTotal()), showLoading(data.loading), showSuccess(data.success), showError(data.error), showCheckout());\n};\n\nexport default Checkout;","map":{"version":3,"sources":["C:/Users/aman/Desktop/412Project/MorissetteApp/frontend/src/Components/Checkout.js"],"names":["emptyCart","React","useState","useEffect","Link","createOrder","processPayment","getBraintreeClientToken","authenticate","isAuthenticated","DropIn","Checkout","products","setRun","f","run","undefined","data","setData","loading","success","clientToken","error","instance","address","customerId","customer","_id","token","getToken","userId","then","console","log","handleAddress","event","target","value","getTotal","reduce","currentValue","nextValue","count","price","showCheckout","showDropIn","deliveryAddress","buy","nonce","getNonce","requestPaymentMethod","paymentData","paymentMethodNonce","amount","response","createOrderData","transaction_id","transaction","id","catch","message","length","authorization","paypal","flow","showError","display","showSuccess","showLoading"],"mappings":"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","sourcesContent":["import { emptyCart } from './cartHelpers';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { createOrder,processPayment,getBraintreeClientToken,\r\n    authenticate,isAuthenticated } from './fetchvehicles';\r\nimport DropIn from 'braintree-web-drop-in-react';\r\n\r\n\r\n\r\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success: false,\r\n        clientToken: null,\r\n        error: '',\r\n        instance: {},\r\n        address: ''\r\n    });\r\n\r\n    const customerId = isAuthenticated() && isAuthenticated().customer._id;\r\n    const token = isAuthenticated() && isAuthenticated().token;\r\n\r\n    const getToken = (customerId, token) => {\r\n        getBraintreeClientToken(userId, token).then(data => {\r\n            if (data.error) {\r\n                console.log(data.error);\r\n                setData({ ...data, error: data.error });\r\n            } else {\r\n                console.log(data);\r\n                setData({ clientToken: data.clientToken });\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getToken(userId, token);\r\n    }, []);\r\n\r\n    const handleAddress = event => {\r\n        setData({ ...data, address: event.target.value });\r\n    };\r\n\r\n    const getTotal = () => {\r\n        return products.reduce((currentValue, nextValue) => {\r\n            return currentValue + nextValue.count * nextValue.price;\r\n        }, 0);\r\n    };\r\n\r\n    const showCheckout = () => {\r\n        return isAuthenticated() ? (\r\n            <div>{showDropIn()}</div>\r\n        ) : (\r\n            <Link to=\"/signin\">\r\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n            </Link>\r\n        );\r\n    };\r\n\r\n    let deliveryAddress = data.address;\r\n\r\n    const buy = () => {\r\n        setData({ loading: true });\r\n        // send the nonce to your server\r\n        // nonce = data.instance.requestPaymentMethod()\r\n        let nonce;\r\n        let getNonce = data.instance\r\n            .requestPaymentMethod()\r\n            .then(data => {\r\n                // console.log(data);\r\n                nonce = data.nonce;\r\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\r\n                // and also total to be charged\r\n                // console.log(\r\n                //     \"send nonce and total to process: \",\r\n                //     nonce,\r\n                //     getTotal(products)\r\n                // );\r\n                const paymentData = {\r\n                    paymentMethodNonce: nonce,\r\n                    amount: getTotal(products)\r\n                };\r\n\r\n                processPayment(userId, token, paymentData)\r\n                    .then(response => {\r\n                        console.log(response);\r\n                        // empty cart\r\n                        // create order\r\n\r\n                        const createOrderData = {\r\n                            products: products,\r\n                            transaction_id: response.transaction.id,\r\n                            amount: response.transaction.amount,\r\n                            address: deliveryAddress\r\n                        };\r\n\r\n                        createOrder(userId, token, createOrderData)\r\n                            .then(response => {\r\n                                emptyCart(() => {\r\n                                    setRun(!run); // run useEffect in parent Cart\r\n                                    console.log('payment success and empty cart');\r\n                                    setData({\r\n                                        loading: false,\r\n                                        success: true\r\n                                    });\r\n                                });\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error);\r\n                                setData({ loading: false });\r\n                            });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                        setData({ loading: false });\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                // console.log(\"dropin error: \", error);\r\n                setData({ ...data, error: error.message });\r\n            });\r\n    };\r\n\r\n    const showDropIn = () => (\r\n        <div onBlur={() => setData({ ...data, error: '' })}>\r\n            {data.clientToken !== null && products.length > 0 ? (\r\n                <div>\r\n                    <div className=\"gorm-group mb-3\">\r\n                        <label className=\"text-muted\">Delivery address:</label>\r\n                        <textarea\r\n                            onChange={handleAddress}\r\n                            className=\"form-control\"\r\n                            value={data.address}\r\n                            placeholder=\"Type your delivery address here...\"\r\n                        />\r\n                    </div>\r\n\r\n                    <DropIn\r\n                        options={{\r\n                            authorization: data.clientToken,\r\n                            paypal: {\r\n                                flow: 'vault'\r\n                            }\r\n                        }}\r\n                        onInstance={instance => (data.instance = instance)}\r\n                    />\r\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\r\n                        Pay\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n\r\n    const showError = error => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = success => (\r\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\r\n            Thanks! Your payment was successful!\r\n        </div>\r\n    );\r\n\r\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Total: ${getTotal()}</h2>\r\n            {showLoading(data.loading)}\r\n            {showSuccess(data.success)}\r\n            {showError(data.error)}\r\n            {showCheckout()}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}