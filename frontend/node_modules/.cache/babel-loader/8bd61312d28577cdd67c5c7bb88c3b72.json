{"ast":null,"code":"//router.put('/update-account/:customerId', requireSignin, update);\nexport const read = (customerId, token) => {\n  return fetch(`http://localhost:8000/api/customer/${customerId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const update = (customerId, token, customer) => {\n  return fetch(`http://localhost:8000/api/update-account//${customerId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(customer)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateUser = (customer, next) => {\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"jwt\")) {\n      let auth = JSON.parse(localStorage.getItem(\"jwt\"));\n      auth.user = customer;\n      localStorage.setItem(\"jwt\", JSON.stringify(auth));\n      next();\n    }\n  }\n};\nexport const getPurchaseHistory = (customerId, token) => {\n  return fetch(`http://localhost:8000/api/orders/history/${customerId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["C:/Users/aman/Desktop/412Project/MorissetteApp/frontend/src/Components/apiUser.js"],"names":["read","customerId","token","fetch","method","headers","Accept","Authorization","then","response","json","catch","err","console","log","update","customer","body","JSON","stringify","updateUser","next","window","localStorage","getItem","auth","parse","user","setItem","getPurchaseHistory"],"mappings":"AAAA;AAGA,OAAO,MAAMA,IAAI,GAAG,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACvC,SAAOC,KAAK,CAAE,sCAAqCF,UAAW,EAAlD,EAAqD;AAC7DG,IAAAA,MAAM,EAAE,KADqD;AAE7DC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,EAAG,UAASL,KAAM;AAH1B;AAFoD,GAArD,CAAL,CAQFM,IARE,CAQGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXX,CAAP;AAYH,CAbM;AAgBP,OAAO,MAAMG,MAAM,GAAG,CAACd,UAAD,EAAaC,KAAb,EAAoBc,QAApB,KAAiC;AACnD,SAAOb,KAAK,CAAE,6CAA4CF,UAAW,EAAzD,EAA4D;AACpEG,IAAAA,MAAM,EAAE,KAD4D;AAEpEC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,EAAG,UAASL,KAAM;AAH1B,KAF2D;AAOpEe,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,QAAf;AAP8D,GAA5D,CAAL,CASFR,IATE,CASGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXE,EAYFC,KAZE,CAYIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZX,CAAP;AAaH,CAdM;AAiBP,OAAO,MAAMQ,UAAU,GAAG,CAACJ,QAAD,EAAWK,IAAX,KAAoB;AAC1C,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/B,QAAIC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAJ,EAAiC;AAC7B,UAAIC,IAAI,GAAGP,IAAI,CAACQ,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAX,CAAX;AACAC,MAAAA,IAAI,CAACE,IAAL,GAAYX,QAAZ;AACAO,MAAAA,YAAY,CAACK,OAAb,CAAqB,KAArB,EAA4BV,IAAI,CAACC,SAAL,CAAeM,IAAf,CAA5B;AACAJ,MAAAA,IAAI;AACP;AACJ;AACJ,CATM;AAYP,OAAO,MAAMQ,kBAAkB,GAAG,CAAC5B,UAAD,EAAaC,KAAb,KAAuB;AACrD,SAAOC,KAAK,CAAE,4CAA2CF,UAAW,EAAxD,EAA2D;AACnEG,IAAAA,MAAM,EAAE,KAD2D;AAEnEC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,EAAG,UAASL,KAAM;AAH1B;AAF0D,GAA3D,CAAL,CAQFM,IARE,CAQGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXX,CAAP;AAYH,CAbM","sourcesContent":["//router.put('/update-account/:customerId', requireSignin, update);\r\n\r\n\r\nexport const read = (customerId, token) => {\r\n    return fetch(`http://localhost:8000/api/customer/${customerId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n\r\nexport const update = (customerId, token, customer) => {\r\n    return fetch(`http://localhost:8000/api/update-account//${customerId}`, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(customer)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};\r\n\r\n\r\nexport const updateUser = (customer, next) => {\r\n    if (typeof window !== \"undefined\") {\r\n        if (localStorage.getItem(\"jwt\")) {\r\n            let auth = JSON.parse(localStorage.getItem(\"jwt\"));\r\n            auth.user = customer;\r\n            localStorage.setItem(\"jwt\", JSON.stringify(auth));\r\n            next();\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const getPurchaseHistory = (customerId, token) => {\r\n    return fetch(`http://localhost:8000/api/orders/history/${customerId}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => console.log(err));\r\n};"]},"metadata":{},"sourceType":"module"}